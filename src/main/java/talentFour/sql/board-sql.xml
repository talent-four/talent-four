<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>
<comment>board-sql.xml</comment>

	<!-- 대분류 가져오기 -->
	<entry key="getMainCategory">
		SELECT CATEGORY_CODE, CATEGORY_NAME
		FROM CATEGORY
		WHERE PARENT_ID IS NULL
		ORDER BY CATEGORY_CODE
	</entry>
	
	<!-- 소분류 가져오기 -->
	<entry key="getSubCategory">
		SELECT CATEGORY_CODE, CATEGORY_NAME, PARENT_ID
		FROM CATEGORY
		WHERE PARENT_ID = ?
		ORDER BY CATEGORY_CODE
	</entry>
	
	<!-- 클래스 전부 가져오기 -->
	<entry key="getAllClasses">
		SELECT C.*, M.MEMBER_NM
		FROM CLASS C
		JOIN MEMBER M ON C.MEMBER_NO = M.MEMBER_NO
	</entry>
	
	
	<!-- 대분류로 클래스 가져오기 -->
	<entry key="getMainClasses">
		SELECT C.*, M.MEMBER_NM
		FROM CLASS C
		JOIN MEMBER M ON C.MEMBER_NO = M.MEMBER_NO
		WHERE C.CATEGORY_CODE IN (
		    SELECT CATEGORY_CODE
		    FROM CATEGORY
		    WHERE PARENT_ID = ?
		    )
	</entry>
	
	<!-- 소분류로 클래스 가져오기 -->
	<entry key="getClasses">
		SELECT C.*, M.MEMBER_NM
		FROM CLASS C
		JOIN MEMBER M ON C.MEMBER_NO = M.MEMBER_NO
		WHERE CATEGORY_CODE = ?
	</entry>
	
	<!-- 클래스 디테일 페이지 조회 -->
	<entry key="getClass">
		SELECT C.*, M.MEMBER_NM, M.MEMBER_PROFILE, T.CATEGORY_NAME SUB,
		    (SELECT CATEGORY_NAME
		     FROM CATEGORY
		     WHERE CATEGORY_CODE = T.PARENT_ID) AS MAIN
		FROM CLASS C
		JOIN MEMBER M ON M.MEMBER_NO = C.MEMBER_NO
		JOIN CATEGORY T ON C.CATEGORY_CODE = T.CATEGORY_CODE
		WHERE CLASS_NO = ?
	</entry>
	
	<entry key="selectReview">
SELECT B.BOARD_NO, B.BOARD_TITLE, B.BOARD_CONTENT, TO_CHAR(B.CREATED_DT, 'YY-MM-DD'), TO_CHAR(B.UPDATE_DT, 'YY-MM-DD'), B.BOARD_ST, M.MEMBER_NM, R.REIVEW_STAR, R.CLASS_NO as parents , H.TAG_NAME , (SELECT COUNT(*) FROM REPORT WHERE B.BOARD_NO=BOARD_NO) AS REPORT, (SELECT COUNT(*) FROM THUMBS WHERE B.BOARD_NO=BOARD_NO) AS THUMBS, M.MEMBER_PROFILE, C.CLASS_NAME, INSTRUCTOR.MEMBER_NM AS INSTRUCTOR_NAME , C.CLASS_URL 
FROM BOARD B
JOIN REVIEW R ON (B.BOARD_NO=R.BOARD_NO)
JOIN HASHTAG H ON (B.BOARD_NO=H.BOARD_NO)
JOIN MEMBER M ON (B.MEMBER_NO=M.MEMBER_NO)
JOIN CLASS C ON (R.CLASS_NO = C.CLASS_NO)
JOIN MEMBER INSTRUCTOR ON (C.MEMBER_NO = INSTRUCTOR.MEMBER_NO)
WHERE BOARD_CD=3
	</entry>


	<entry key="chatting"> 
		SELECT
		    F.MEMBER_NM AS CHAT_FROM_NAME,
		    T.MEMBER_NM AS CHAT_TO_NAME,
		    C.CHAT_MESSAGE,
		    TO_CHAR(C.CHAT_TIMESTAMP, 'MM-DD, HH24:MI:SS')
		FROM
		    CHATTING C
		JOIN
		    MEMBER F ON C.CHAT_FROM = F.MEMBER_NO
		JOIN
		    MEMBER T ON C.CHAT_TO = T.MEMBER_NO
		WHERE F.MEMBER_NM=? AND T.MEMBER_NM=?
		OR T.MEMBER_NM=? AND F.MEMBER_NM=?
		ORDER BY
		    C.CHAT_TIMESTAMP
	</entry>
	
</properties>
